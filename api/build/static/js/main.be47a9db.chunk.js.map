{"version":3,"sources":["actions/types/service.js","reducers/service.js","reducers/index.js","store.js","util/history.js","util/routes.js","util/theme.js","styled/form.js","components/LoginForm/styles.js","components/LoginForm/index.js","containers/LoginScreen/styles.js","api/auth.js","config.js","api/service.js","api/index.js","actions/auth.js","containers/LoginScreen/index.js","containers/AppScreen/styles.js","containers/Navbar/styles.js","containers/Navbar/index.js","util/constants.js","actions/service.js","containers/OverviewScreen/styles.js","components/Section/styles.js","components/Section/index.js","components/Table/styles.js","components/Table/index.js","containers/OverviewScreen/index.js","containers/DetailScreen/styles.js","containers/DetailScreen/index.js","containers/AppScreen/index.js","containers/Root/styles.js","containers/Root/index.js","App.js","serviceWorker.js","index.js"],"names":["FETCH_ALL_SERVICES","payload","type","FETCH_HELD_OR_NON_ACTIVE_SERVICES","FETCH_ACTIVE_OR_NON_ACTIVE_SERVICES","FETCH_SERVICE_SUMMARY","FETCH_SERVICE_DETAILS","INITIAL_STATE","summary","allServices","heldOrNonActiveServices","activeOrNonActiveServices","serviceDetails","kategooriad","combineReducers","service","state","arguments","length","undefined","action","Object","objectSpread","middleware","applyMiddleware","promise","thunk","createLogger","createStore","reducer","createBrowserHistory","routes","login","home","root","details","serviceId","concat","theme","COLOR_1","opacity","BLACK","WHITE","ButtonStyled","styled","button","_templateObject","_ref","_ref2","InputStyled","input","_templateObject2","LabelStyled","label","_templateObject3","LoginFormStyled","form","styles_templateObject","FormTitleStyled","div","styles_templateObject2","LoginForm","username","password","onSubmit","e","preventDefault","console","log","_this$state","_this","props","handleChange","target","value","setState","defineProperty","name","_this2","this","react_default","a","createElement","autoComplete","onChange","Component","LoginScreenStyled","LoginScreen_styles_templateObject","auth","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","abrupt","axios","post","stop","_x","_x2","apply","fetchAll","get","fetchActiveOrNonActive","_callee2","_context2","fetchHeldOrNonActive","_ref3","_callee3","_context3","fetchSummary","_ref4","_callee4","_context4","fetchDetails","_ref5","_callee5","_context5","params","api","end","_ref6","_callee6","xmin","_context6","_x3","dispatch","history","push","err","LoginScreen","loginAction","components_LoginForm","connect","AppScreenStyled","AppScreen_styles_templateObject","ContentStyled","AppScreen_styles_templateObject2","NavbarStyled","Navbar_styles_templateObject","LeftStyled","Navbar_styles_templateObject2","MidStyled","styles_templateObject3","RightStyled","_templateObject4","Navbar","logout","Link","to","tableRows","headings","sizes","ignoreValues","fetchAllServices","data","API","sent","t0","fetchActiveOrNonActiveServices","fetchHeldOrNonActiveServices","fetchServiceSummary","_ref7","_ref8","_x4","endService","_ref11","_x6","OverviewScreenStyled","OverviewScreen_styles_templateObject","SectionStyled","Section_styles_templateObject","TitleStyled","Section_styles_templateObject2","Section_styles_templateObject3","Section","_this$props","children","title","styles_ContentStyled","TableStyled","table","Table_styles_templateObject","RowStyled","tr","Table_styles_templateObject2","heading","clickable","Table","onRowClick","addCol","addColClick","ignore","map","row","onClick","keys","key","i","indexOf","width","OverviewScreen","viewDetails","teenus_kood","endServiceAction","components_Section","components_Table","store","DetailScreenStyled","DetailScreen_styles_templateObject","DetailTableStyled","DetailScreen_styles_templateObject2","DetailScreen_styles_templateObject3","DetailScreen","match","_ref9","_ref10","_x5","fetchServiceDetails","teenus_nimetus","teenus_kirjeldus","hind","reg_aeg","seisund","registreerija","raskusaste_nimetus","styles_TitleStyled","kategooria","kategooria_tyyp","kategooria_nimetus","withRouter","AppScreen","containers_Navbar","Switch","Route","exact","path","component","RootStyled","Root_styles_templateObject","Root","App","es","Router","styled_components_browser_esm","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.be47a9db.chunk.js","sourcesContent":["export const FETCH_ALL_SERVICES = payload => ({ \n    type: 'FETCH_ALL_SERVICES', payload \n});\n\nexport const FETCH_HELD_OR_NON_ACTIVE_SERVICES = payload => ({ \n    type: 'FETCH_ALL_OR_NON_ACTIVE_SERVICES', payload\n});\n\nexport const FETCH_ACTIVE_OR_NON_ACTIVE_SERVICES = payload => ({ \n    type: 'FETCH_ACTIVE_OR_NON_ACTIVE_SERVICES', payload\n});\n\nexport const FETCH_SERVICE_SUMMARY = payload => ({\n    type: 'FETCH_SERVICE_SUMMARY', payload\n})\n\nexport const FETCH_SERVICE_DETAILS = payload => ({\n    type: 'FETCH_SERVICE_DETAILS', payload\n})","import {\n    FETCH_ACTIVE_OR_NON_ACTIVE_SERVICES,\n    FETCH_HELD_OR_NON_ACTIVE_SERVICES,\n    FETCH_SERVICE_SUMMARY,\n    FETCH_ALL_SERVICES,\n    FETCH_SERVICE_DETAILS\n} from '../actions/types/service';\n\nconst INITIAL_STATE = {\n    summary: [],\n    allServices: [],\n    heldOrNonActiveServices: [],\n    activeOrNonActiveServices: [],\n    serviceDetails: {\n        kategooriad: []\n    }\n};\n\nexport default function reducer(state=INITIAL_STATE, action) {\n    \n    switch (action.type) {\n        case FETCH_ACTIVE_OR_NON_ACTIVE_SERVICES().type: {\n            return {\n                ...state,\n                activeOrNonActiveServices: action.payload\n            }\n        }\n        case FETCH_HELD_OR_NON_ACTIVE_SERVICES().type: {\n            return {\n                ...state,\n                heldOrNonActiveServices: action.payload\n            }\n        }\n        case FETCH_ALL_SERVICES().type: {\n            return {\n                ...state,\n                allServices: action.payload\n            }\n        }\n        case FETCH_SERVICE_SUMMARY().type: {\n            return {\n                ...state,\n                summary: action.payload\n            }\n        }\n        case FETCH_SERVICE_DETAILS().type: {\n            return {\n                ...state,\n                serviceDetails: action.payload\n            }\n        }\n        default: {\n            break;\n        }\n    }\n\n    return state;\n}\n","import { combineReducers } from 'redux';\n\nimport service from './service';\n\nexport default combineReducers({\n    service\n})\n","import { applyMiddleware, createStore } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport promise from 'redux-promise-middleware';\n\nimport reducer from './reducers';\n\nconst middleware = applyMiddleware(promise(), thunk, createLogger());\n\nexport default createStore(reducer, middleware);\n","import createBrowserHistory from 'history/createBrowserHistory';\n\nexport default createBrowserHistory();","export default {\n    login: '/login',\n    home: '/',\n    root: '/',\n    details: serviceId => { return `/details/${serviceId}`; }\n}","export const COLOR_1 = opacity => `rgba(56, 147, 255, ${opacity || 1})`;\nexport const BLACK = opacity => `rgba(0, 0, 0, ${opacity || 1})`;\nexport const WHITE = opacity => `rgba(255, 255, 255, ${opacity || 1})`;\n\nexport default {\n    COLOR_1,\n    BLACK,\n    WHITE\n}","import styled from 'styled-components';\n\nexport const ButtonStyled =  styled.button`\n    border: none;\n    background: ${({ theme }) => theme.COLOR_1()};\n    font-size: .9rem;\n    color: white;\n    font-weight: bold;\n    border-radius: .5rem;\n    padding: .5rem;\n    cursor: pointer;\n\n    :hover {\n        background: ${({ theme }) => theme.COLOR_1(.9)};\n    }\n`;\n\nexport const InputStyled = styled.input`\n    margin-bottom: 1rem;\n    height: 1.5rem;\n    font-size: .9rem;\n    padding: .25rem;\n    border: 1px solid #c0c0c0;\n    border-radius: .5rem;\n`\n\nexport const LabelStyled = styled.label`\n    font-weight: bold;\n    color: #777;\n    margin-bottom: .25rem;\n    font-size: .9rem;\n`\n","import styled from 'styled-components';\n\nexport const LoginFormStyled = styled.form`\n    display: flex;\n    flex-direction: column;\n    width: 15rem;\n    border: 1px solid #c0c0c0;\n    padding: 2.5rem 2.5rem 5rem 2.5rem;\n    border-radius: .5rem;\n    box-shadow: 6px 4px 10px ${({ theme }) => theme.BLACK(.1)};\n`\n\nexport const FormTitleStyled = styled.div`\n    font-weight: bold;\n    font-size: 2rem;\n    margin-bottom: 3rem;\n`","import React, { Component } from 'react';\nimport { connect } from 'react-router-dom';\n\nimport {\n    LabelStyled, ButtonStyled, InputStyled\n} from '../../styled/form';\n\nimport {\n    LoginFormStyled,\n    FormTitleStyled\n} from './styles';\n\nclass LoginForm extends Component {\n    state = {\n        username: '',\n        password: ''\n    }\n\n    onSubmit = e => {\n        e.preventDefault();\n        console.log('lol');\n        const { username, password } = this.state;\n        this.props.onSubmit(username, password);\n    }\n\n    handleChange = e => {\n        console.log(e.target.value);\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    render() {\n        return (\n            <LoginFormStyled onSubmit={e => this.onSubmit(e)}>\n                <FormTitleStyled>\n                    Autoteenindus\n                </FormTitleStyled>\n                <LabelStyled>Kasutajanimi:</LabelStyled>\n                <InputStyled \n                    autoComplete=\"off\"\n                    onChange={e => this.handleChange(e)} \n                    name=\"username\" \n                    type=\"text\"\n                />\n                <LabelStyled>Parool:</LabelStyled>\n                <InputStyled \n                    onChange={e => this.handleChange(e)}\n                    name=\"password\" \n                    type=\"password\" \n                />\n                <ButtonStyled>\n                    Logi sisse\n                </ButtonStyled>\n            </LoginFormStyled>\n        );\n    }\n}\n\nexport default LoginForm;\n","import styled from 'styled-components';\n\nexport const LoginScreenStyled = styled.div`\n    height: 100%;\n    width: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;","import axios from 'axios';\nimport { API_URL } from '../config';\n\nconst login = async (username, password) => {\n    return axios.post(`${API_URL}/auth/login`, { username, password })\n}\n\nexport default {\n    login\n}","export const API_URL = '/api';","import axios from 'axios';\nimport { API_URL } from '../config';\n\nconst fetchAll = async () => {\n    return axios.get(`${API_URL}/service/all`);\n}\n\nconst fetchActiveOrNonActive = async () => {\n    return axios.get(`${API_URL}/service/activeOrNonActive`);\n}\n\nconst fetchHeldOrNonActive = async () => {\n    return axios.get(`${API_URL}/service/heldOrNonActive`);\n}\n\nconst fetchSummary = async () => {\n    return axios.get(`${API_URL}/service/summary`);\n}\n\nconst fetchDetails = async serviceId => {\n    return axios.get(`${API_URL}/service/details`, {\n        params: {\n            serviceId\n        }\n    });\n}\n\nconst end = async (xmin, serviceId) => {\n    return axios.post(`${API_URL}/service/end`, { xmin, serviceId })\n}\n\nexport default {\n    end,\n    fetchAll,\n    fetchActiveOrNonActive,\n    fetchHeldOrNonActive,\n    fetchSummary,\n    fetchDetails\n}","import auth from './auth';\nimport service from './service';\n\nexport default {\n    auth,\n    service\n}","import history from '../util/history';\nimport routes from '../util/routes';\n\nimport API from '../api';\n\nexport const login = (username, password) => {\n    return async dispatch => {\n        try {\n            // const { data } = await API.auth.login(username, password);\n            history.push(routes.home);\n        } catch (err) {\n\n        }\n    }\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport LoginForm from '../../components/LoginForm';\n\nimport { LoginScreenStyled } from './styles';\n\nimport { login as loginAction } from '../../actions/auth';\n\nclass LoginScreen extends Component {\n    login = (username, password) => {\n        this.props.dispatch(loginAction(username, password));\n    }\n\n    render() {\n        return (\n            <LoginScreenStyled>\n                <LoginForm \n                    onSubmit={this.login}\n                />\n            </LoginScreenStyled>\n        );\n    }\n}\n\nexport default connect()(LoginScreen);\n","import styled from 'styled-components';\n\nexport const AppScreenStyled = styled.div`\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`;\n\nexport const ContentStyled = styled.div`\n    padding: 1rem 5rem;\n    width: 100%;\n    flex: 1;\n    box-sizing: border-box;\n    overflow: auto;\n`","import styled from 'styled-components';\n\nexport const NavbarStyled = styled.div`\n    background: ${({ theme }) => theme.WHITE()};\n    width: 100%;\n    box-shadow: 0 6px 10px rgba(0, 0, 0, .1);\n    display: flex;\n    flex: 1;\n    flex-shrink: 0;\n    padding: 1rem 0;\n\n    div {\n        flex: 1;\n    }\n`;\n\nexport const LeftStyled = styled.div`\n    text-align: left;\n    padding-left: 1rem;\n    font-size: .9rem;\n`;\n\nexport const MidStyled = styled.div`\n    text-align: center;\n    font-weight: bold;\n`;\n\nexport const RightStyled = styled.div`\n    text-align: right;\n    padding-right: 1rem;\n    font-size: .9rem;\n`;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { \n     NavbarStyled, LeftStyled, MidStyled, RightStyled\n} from './styles';\n\nimport routes from '../../util/routes';\nimport history from '../../util/history';\n\nclass Navbar extends Component {\n    logout = () => {\n\n    }\n\n    render() {\n        return (\n            <NavbarStyled>\n                <LeftStyled>\n                    <Link to={routes.login}>Logi välja</Link>\n                </LeftStyled>\n                <MidStyled>\n                    <Link to={routes.home}>Autoteenindus</Link>\n                </MidStyled>\n                <RightStyled>\n                    Tere, Nimi (Juhataja)\n                </RightStyled>\n            </NavbarStyled>\n        );\n    }\n}\n\nexport default Navbar;\n","export const tableRows = {\n    allServices: {\n        headings: [\n            'Teenuse kood', \n            'Teenuse nimetus', \n            'Hind (EUR)', \n            'Teenuse kirjeldus', \n            'Registreerimisaeg', \n            'Seisund', \n            'Registreerija'\n        ], \n        sizes: ['10%', '10%', '10%', '30%', '15%', '10%', '15%']\n    },\n    summary: {\n        headings: [\n            'Seisundi kood', \n            'Seisundi nimetus', \n            'Teenuste koguarv' \n        ], \n        sizes: ['33%', '33%', '33%']\n    },\n    heldOrNonActiveServices: {\n        headings: [\n            'Teenuse kood',\n            'Hind (EUR)',\n            'Teenuse kirjeldus',\n            'Teenuse nimetus',\n            'Raskusaste',\n            'Seisund'\n        ],\n        sizes: ['0%', '10%', '10%', '40%', '20%', '10%', '10%'],\n        ignoreValues: ['xmin']\n    },\n    activeOrNonActiveServices: {\n        headings: [\n            'Teenuse kood',\n            'Seisund',\n            'Teenuse nimetus',\n            'Teenuse kirjeldus',\n            'Hind (EUR)',\n            'Registreerimisaeg',\n            'Registreerija',\n            ''\n        ],\n        sizes: ['0%', '10%', '10%', '10%', '30%', '10%', '15%', '15%'],\n        ignoreValues: ['xmin']\n    }\n}","import API from '../api';\n\nimport {\n    FETCH_ACTIVE_OR_NON_ACTIVE_SERVICES,\n    FETCH_ALL_SERVICES,\n    FETCH_SERVICE_SUMMARY,\n    FETCH_HELD_OR_NON_ACTIVE_SERVICES,\n    FETCH_SERVICE_DETAILS\n} from './types/service';\n\nexport const fetchAllServices = () => {\n    return async dispatch => {\n        try {\n            const { data } = await API.service.fetchAll();\n\n            dispatch(FETCH_ALL_SERVICES(data));\n        } catch (err) {\n            throw err;\n        }\n    }\n}\n\nexport const fetchActiveOrNonActiveServices = () => {\n    return async dispatch => {\n        try {\n            const { data } = await API.service.fetchActiveOrNonActive();\n\n            dispatch(FETCH_ACTIVE_OR_NON_ACTIVE_SERVICES(data));\n        } catch (err) {\n            throw err;\n        }\n    }\n}\n\nexport const fetchHeldOrNonActiveServices = () => {\n    return async dispatch => {\n        try {\n            const { data } = await API.service.fetchHeldOrNonActive();\n\n            dispatch(FETCH_HELD_OR_NON_ACTIVE_SERVICES(data));\n        } catch (err) {\n            throw err;\n        }\n    }\n}\n\nexport const fetchServiceSummary = () => {\n    return async dispatch => {\n        try {\n            const { data } = await API.service.fetchSummary();\n\n            dispatch(FETCH_SERVICE_SUMMARY(data));\n        } catch (err) {\n            throw err;\n        }\n    }\n}\n\nexport const fetchServiceDetails = serviceId => {\n    return async dispatch => {\n        try {\n            const { data } = await API.service.fetchDetails(serviceId);\n\n            dispatch(FETCH_SERVICE_DETAILS(data));\n        } catch (err) {\n            throw err;\n        }\n    }\n}\n\nexport const endService = (xmin, serviceId) => {\n    return async dispatch => {\n        try {\n            await API.service.end(xmin, serviceId);\n            dispatch(fetchAllServices());\n            dispatch(fetchActiveOrNonActiveServices());\n            dispatch(fetchServiceSummary());\n            dispatch(fetchHeldOrNonActiveServices());\n        } catch (err) {\n            throw err;\n        }\n    }\n}","import styled from 'styled-components';\n\nexport const OverviewScreenStyled = styled.div`\n    width: 100%;\n`;","import styled from 'styled-components';\n\nexport const SectionStyled = styled.div`\n    border-radius: .5rem;\n    overflow: hidden;\n    margin: 2rem 0;\n    box-shadow: 4px 6px 10px rgba(0, 0, 0, .1);\n`;\n\nexport const TitleStyled = styled.div`\n    background: #3893ff;\n    padding: .5rem .75rem;\n    color: white;\n    font-weight: bold;\n`;\n\nexport const ContentStyled = styled.div`\n    border: 1px solid #c0c0c0;\n    border-width: 0 1px 1px 1px;\n    border-radius: 0 0 .5rem .5rem;\n`;","import React, { Component } from 'react';\n\nimport { \n    SectionStyled, TitleStyled, ContentStyled \n} from './styles';\n\nclass Section extends Component {\n    render() {\n        const { \n            children,\n            title\n        } = this.props;\n\n        return (\n            <SectionStyled>\n                <TitleStyled>\n                    {title}\n                </TitleStyled>\n                <ContentStyled>\n                    {children}\n                </ContentStyled>\n            </SectionStyled>\n        );\n    }\n}\n\nexport default Section;\n","import styled from 'styled-components';\n\nexport const TableStyled = styled.table`\n    font-size: .9rem;\n    border-spacing: 0;\n    width: 100%;\n`\n\nexport const RowStyled = styled.tr`\n    ${({ heading, theme, clickable }) => `\n        :not(:last-child) td { \n            border-bottom: 1px solid ${theme.BLACK(.1)}; \n        }\n\n        td:not(:last-child) {\n            border-right: 1px solid ${theme.BLACK(.1)};\n        }\n        \n        td { padding: .5rem; }\n\n        :hover {\n            ${clickable && `\n                background: ${theme.BLACK(.05)};\n                cursor: pointer;\n            `}\n        }\n\n        ${heading && 'font-weight: bold;'}\n    `}\n`\n","import React, { Component } from 'react';\n\nimport { \n     TableStyled, RowStyled\n} from './styles';\n\n\nclass Table extends Component {\n    render() {\n        const {\n            data,\n            sizes,\n            headings,\n            clickable,\n            onRowClick,\n            ignoreValues,\n            addCol,\n            addColClick\n        } = this.props;\n\n        const ignore = ignoreValues || [];\n\n        return (\n            <TableStyled>\n                <RowStyled heading>\n                    {headings.map(heading => (\n                        <td>{heading}</td>\n                    ))}\n                </RowStyled>\n                {data.map(row => (\n                    <RowStyled onClick={() => onRowClick && onRowClick(row)} clickable={clickable}>\n                        {Object.keys(row).map((key, i) => (\n                            ignore.indexOf(key) === -1 &&\n                            <td width={sizes[i]}>\n                                {row[key]}\n                            </td>\n                        ))}\n                        {addCol &&\n                            <td onClick={() => addColClick(row)}>\n                                {addCol}\n                            </td>\n                        }\n                    </RowStyled>\n                ))}\n            </TableStyled>\n        );\n    }\n}\n\nexport default Table;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport { tableRows } from '../../util/constants';\nimport history from '../../util/history';\nimport routes from '../../util/routes';\n\nimport { \n    endService as endServiceAction,\n    fetchActiveOrNonActiveServices,\n    fetchAllServices,\n    fetchHeldOrNonActiveServices,\n    fetchServiceSummary,\n    fetchServiceDetails\n} from '../../actions/service';\n\nimport {\n    OverviewScreenStyled\n} from './styles';\n\nimport Section from '../../components/Section';\nimport Table from '../../components/Table';\n\nclass OverviewScreen extends Component {\n\n    viewDetails = row => {\n        history.push(routes.details(row.teenus_kood));\n    }\n\n    endService = row => {\n        this.props.dispatch(endServiceAction(row.xmin, row.teenus_kood));\n    }\n\n    componentDidMount() {\n        this.props.dispatch(fetchActiveOrNonActiveServices());\n        this.props.dispatch(fetchAllServices());\n        this.props.dispatch(fetchHeldOrNonActiveServices());\n        this.props.dispatch(fetchServiceSummary());\n    }\n\n    render() {\n        const {\n            summary,\n            allServices,\n            heldOrNonActiveServices,\n            activeOrNonActiveServices\n        } = this.props;\n\n        return (\n            <OverviewScreenStyled>\n                <Section title=\"KÕIK TEENUSED\">\n                    <Table \n                        data={allServices} \n                        headings={tableRows.allServices.headings}\n                        sizes={tableRows.allServices.sizes}\n                        onRowClick={this.viewDetails}\n                        clickable\n                    />\n                </Section>\n                <Section title=\"TEENUSTE KOONDARUANNE\">\n                    <Table \n                        data={summary} \n                        headings={tableRows.summary.headings}\n                        sizes={tableRows.summary.sizes}\n                    />\n                </Section>\n                <Section title=\"OOTEL JA MITTEAKTIIVSED TEENUSED\">\n                    <Table\n                        data={heldOrNonActiveServices}\n                        headings={tableRows.heldOrNonActiveServices.headings}\n                        sizes={tableRows.heldOrNonActiveServices.sizes}\n                        ignoreValues={tableRows.heldOrNonActiveServices.ignoreValues}\n                    />\n                </Section>\n                <Section title=\"LÕPETA TEENUS\">\n                    <Table\n                        data={activeOrNonActiveServices}\n                        headings={tableRows.activeOrNonActiveServices.headings}\n                        sizes={tableRows.activeOrNonActiveServices.sizes}\n                        ignoreValues={tableRows.activeOrNonActiveServices.ignoreValues}\n                        addCol={<Link to=\"\">Lõpeta</Link>}\n                        addColClick={this.endService}\n                    />\n                </Section>\n            </OverviewScreenStyled>\n        );\n    }\n}\n\nconst mapStateToProps = store => {\n    return {\n        summary: store.service.summary,\n        allServices : store.service.allServices,\n        heldOrNonActiveServices: store.service.heldOrNonActiveServices,\n        activeOrNonActiveServices: store.service.activeOrNonActiveServices\n    }\n}\n\nexport default connect(mapStateToProps)(OverviewScreen);\n","import styled from 'styled-components';\n\nexport const DetailScreenStyled = styled.table`\n    width: 100%;\n    padding-top: 2rem;\n    \n`;\n\nexport const DetailTableStyled = styled.table`\n    border-spacing: 0;\n    width: 100%;\n\n    td {\n        padding: .6rem .6rem;\n    }\n\n    tr:nth-child(even) {\n        background: ${({ theme }) => theme.COLOR_1(.1)};\n    }\n`\n\nexport const TitleStyled = styled.div`\n    background: ${({ theme }) => theme.COLOR_1()};\n    width: 100%;\n    padding: .5rem .75rem;\n    font-weight: bold;\n    color: white;\n    box-sizing: border-box;\n    border-radius: .5rem .5rem 0 0;\n`","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { fetchServiceDetails } from '../../actions/service';\n\nimport {\n    DetailScreenStyled,\n    DetailTableStyled,\n    TitleStyled\n} from './styles';\n\nclass DetailScreen extends Component {\n    componentDidMount() {\n        const { serviceId } = this.props.match.params;\n        this.props.dispatch(fetchServiceDetails(serviceId));\n    }\n\n    render() {\n        const {\n            serviceDetails\n        } = this.props;\n\n        const {\n            teenus_kood,\n            teenus_nimetus,\n            teenus_kirjeldus,\n            hind,\n            reg_aeg,\n            seisund,\n            registreerija,\n            kategooriad,\n            raskusaste_nimetus\n        } = serviceDetails;\n\n        return (\n            <DetailScreenStyled>\n                <TitleStyled>\n                    DETAILVAADE\n                </TitleStyled>\n                <DetailTableStyled>\n                    <tr>  \n                        <td width=\"200px\"><strong>Teenuse nimetus:</strong></td> \n                        <td>{teenus_nimetus}</td>\n                    </tr>\n                    <tr>\n                        <td><strong>Teenuse kood:</strong></td> \n                        <td>{teenus_kood}</td>\n                    </tr>\n                    <tr>\n                        <td><strong>Teenuse kirjeldus:</strong></td> \n                        <td>{teenus_kirjeldus}</td>\n                    </tr>\n                    <tr>\n                        <td><strong>Hind (EUR):</strong></td> \n                        <td>{hind}</td>\n                    </tr>\n                    <tr>\n                        <td><strong>Registreerimise aeg:</strong></td> \n                        <td>{reg_aeg}</td>\n                    </tr>\n                    <tr>\n                        <td><strong>Seisund:</strong></td> \n                        <td>{seisund}</td>\n                    </tr>\n                    <tr>\n                        <td><strong>Registreerija:</strong></td> \n                        <td>{registreerija}</td>\n                    </tr>\n                    <tr>\n                        <td><strong>Raskusaste:</strong></td> \n                        <td>{raskusaste_nimetus}</td>\n                    </tr>\n                    {kategooriad.map(kategooria => \n                        <tr>\n                            <td><strong>{kategooria.kategooria_tyyp}:</strong></td> \n                            <td>{kategooria.kategooria_nimetus}</td>\n                        </tr>\n                    )}\n                </DetailTableStyled>\n            </DetailScreenStyled>\n        );\n    }\n}\n\nconst mapStateToProps = store => {\n    return {\n        serviceDetails: store.service.serviceDetails\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(DetailScreen));\n","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport routes from '../../util/routes';\n\nimport {\n    AppScreenStyled, ContentStyled\n} from './styles';\n\nimport Navbar from '../Navbar';\nimport OverviewScreen from '../OverviewScreen';\nimport DetailScreen from '../DetailScreen';\n\nclass AppScreen extends Component {\n    render() {\n        return (\n            <AppScreenStyled>\n                <Navbar />\n                <ContentStyled>\n                    <Switch>\n                        <Route exact path={routes.details(':serviceId')} component={DetailScreen} />\n                        <Route path={routes.home} component={OverviewScreen} />\n                    </Switch>\n                </ContentStyled>\n            </AppScreenStyled>\n        );\n    }\n}\n\nexport default AppScreen;\n","import styled from 'styled-components';\n\nexport const RootStyled = styled.div`\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Switch, withRouter } from 'react-router-dom';\n\nimport routes from '../../util/routes';\n\nimport LoginScreen from '../LoginScreen';\nimport AppScreen from '../AppScreen';\n\nimport { RootStyled } from './styles';\n\nclass Root extends Component {\n    componentDidMount() {\n        /*let path = this.props.location.pathname;\n        path = [routes.login].indexOf(path) === -1 ? path : routes.home;\n        this.props.dispatch(verifyToken(path));*/\n    }\n\n    render() {\n        return (\n            <RootStyled>\n                <Switch>\n                    <Route exact path={routes.login} component={LoginScreen} />\n                    <Route path={routes.home} component={AppScreen} />\n                </Switch>\n            </RootStyled>\n        );\n    }\n}\n\nexport default withRouter(connect()(Root));\n","import React, { Component } from 'react';\nimport { Router, Route } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ThemeProvider } from 'styled-components';\n\nimport store from './store';\nimport history from './util/history';\nimport routes from './util/routes';\nimport theme from './util/theme';\n\nimport Root from './containers/Root';\n\nclass App extends Component {\n    render() {\n        return (\n            <Provider store={store}>\n                <Router history={history}>\n                    <ThemeProvider theme={theme}>\n                        <Route path={routes.root} component={Root} />\n                    </ThemeProvider>\n                </Router>\n            </Provider>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit http://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport './style.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}