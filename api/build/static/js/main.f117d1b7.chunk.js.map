{"version":3,"sources":["actions/types/service.js","actions/types/index.js","reducers/service.js","actions/types/auth.js","reducers/auth.js","reducers/index.js","store.js","util/history.js","util/routes.js","util/theme.js","api/auth.js","config.js","api/service.js","api/index.js","actions/auth.js","styled/form.js","components/LoginForm/styles.js","components/LoginForm/index.js","containers/LoginScreen/styles.js","containers/LoginScreen/index.js","containers/AppScreen/styles.js","containers/Navbar/styles.js","containers/Navbar/index.js","util/constants.js","actions/service.js","containers/OverviewScreen/styles.js","components/Section/styles.js","components/Section/index.js","components/Table/styles.js","components/Table/index.js","containers/OverviewScreen/index.js","containers/DetailScreen/styles.js","containers/DetailScreen/index.js","containers/AppScreen/index.js","containers/Root/styles.js","containers/Root/index.js","App.js","serviceWorker.js","index.js"],"names":["FETCH_ALL_SERVICES","payload","type","FETCH_HELD_OR_NON_ACTIVE_SERVICES","FETCH_ACTIVE_OR_NON_ACTIVE_SERVICES","FETCH_SERVICE_SUMMARY","FETCH_SERVICE_DETAILS","RESET_STATE","INITIAL_STATE","summary","allServices","heldOrNonActiveServices","activeOrNonActiveServices","serviceDetails","kategooriad","LOGIN_SUCCESS","LOGIN_ERROR","loginError","isLoggedIn","combineReducers","auth","state","arguments","length","undefined","action","Object","objectSpread","service","middleware","applyMiddleware","promise","thunk","createLogger","createStore","reducer","createBrowserHistory","routes","login","home","root","details","serviceId","concat","theme","COLOR_1","opacity","BLACK","WHITE","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","email","password","wrap","_context","prev","next","abrupt","axios","post","stop","this","_x","_x2","apply","verify","_ref2","_callee2","_context2","get","authRequest","fetchAll","fetchActiveOrNonActive","fetchHeldOrNonActive","_ref3","_callee3","_context3","fetchSummary","_ref4","_callee4","_context4","fetchDetails","_ref5","_callee5","_context5","params","api","end","_ref6","_callee6","xmin","_context6","_x3","dispatch","data","API","sent","localStorage","setItem","token","history","push","t0","response","msg","logout","removeItem","getItem","headers","Authorization","ButtonStyled","styled","button","_templateObject","InputStyled","input","_templateObject2","LabelStyled","label","_templateObject3","LoginFormStyled","form","styles_templateObject","FormTitleStyled","div","styles_templateObject2","ErrorStyled","styles_templateObject3","LoginForm","username","onSubmit","e","preventDefault","_this$state","_this","props","handleChange","setState","defineProperty","target","name","value","_this2","error","react_default","createElement","autoComplete","onChange","Component","LoginScreenStyled","LoginScreen_styles_templateObject","LoginScreen","loginAction","components_LoginForm","connect","store","AppScreenStyled","AppScreen_styles_templateObject","ContentStyled","AppScreen_styles_templateObject2","NavbarStyled","Navbar_styles_templateObject","LeftStyled","Navbar_styles_templateObject2","MidStyled","Navbar_styles_templateObject3","RightStyled","_templateObject4","Navbar","logoutAction","Link","to","onClick","tableRows","headings","sizes","ignoreValues","fetchAllServices","fetchActiveOrNonActiveServices","fetchHeldOrNonActiveServices","fetchServiceSummary","_ref7","_ref8","_x4","endService","_ref11","_x6","OverviewScreenStyled","OverviewScreen_styles_templateObject","SectionStyled","Section_styles_templateObject","TitleStyled","Section_styles_templateObject2","Section_styles_templateObject3","Section","_this$props","children","title","styles_ContentStyled","TableStyled","table","Table_styles_templateObject","RowStyled","tr","Table_styles_templateObject2","heading","clickable","Table","onRowClick","addCol","addColClick","ignore","map","i","key","row","keys","indexOf","width","OverviewScreen","viewDetails","teenus_kood","endServiceAction","components_Section","components_Table","DetailScreenStyled","DetailScreen_styles_templateObject","DetailTableStyled","DetailScreen_styles_templateObject2","DetailScreen_styles_templateObject3","DetailScreen","match","_ref9","_ref10","_x5","fetchServiceDetails","teenus_nimetus","teenus_kirjeldus","hind","reg_aeg","seisund","registreerija","raskusaste_nimetus","styles_TitleStyled","kategooria","kategooria_tyyp","kategooria_nimetus","withRouter","AppScreen","containers_Navbar","Switch","Route","exact","path","component","RootStyled","Root_styles_templateObject","Root","redirectPath","location","pathname","App","es","Router","styled_components_browser_esm","Boolean","window","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f117d1b7.chunk.js","sourcesContent":["export const FETCH_ALL_SERVICES = payload => ({ \r\n    type: 'FETCH_ALL_SERVICES', payload \r\n});\r\n\r\nexport const FETCH_HELD_OR_NON_ACTIVE_SERVICES = payload => ({ \r\n    type: 'FETCH_ALL_OR_NON_ACTIVE_SERVICES', payload\r\n});\r\n\r\nexport const FETCH_ACTIVE_OR_NON_ACTIVE_SERVICES = payload => ({ \r\n    type: 'FETCH_ACTIVE_OR_NON_ACTIVE_SERVICES', payload\r\n});\r\n\r\nexport const FETCH_SERVICE_SUMMARY = payload => ({\r\n    type: 'FETCH_SERVICE_SUMMARY', payload\r\n})\r\n\r\nexport const FETCH_SERVICE_DETAILS = payload => ({\r\n    type: 'FETCH_SERVICE_DETAILS', payload\r\n})","export const RESET_STATE = { type: 'RESET_STATE' };","import {\r\n    FETCH_ACTIVE_OR_NON_ACTIVE_SERVICES,\r\n    FETCH_HELD_OR_NON_ACTIVE_SERVICES,\r\n    FETCH_SERVICE_SUMMARY,\r\n    FETCH_ALL_SERVICES,\r\n    FETCH_SERVICE_DETAILS\r\n} from '../actions/types/service';\r\n\r\nimport { RESET_STATE } from '../actions/types';\r\n\r\nconst INITIAL_STATE = {\r\n    summary: [],\r\n    allServices: [],\r\n    heldOrNonActiveServices: [],\r\n    activeOrNonActiveServices: [],\r\n    serviceDetails: {\r\n        kategooriad: []\r\n    }\r\n};\r\n\r\nexport default function reducer(state=INITIAL_STATE, action) {\r\n    \r\n    switch (action.type) {\r\n        case FETCH_ACTIVE_OR_NON_ACTIVE_SERVICES().type: {\r\n            return {\r\n                ...state,\r\n                activeOrNonActiveServices: action.payload\r\n            }\r\n        }\r\n        case FETCH_HELD_OR_NON_ACTIVE_SERVICES().type: {\r\n            return {\r\n                ...state,\r\n                heldOrNonActiveServices: action.payload\r\n            }\r\n        }\r\n        case FETCH_ALL_SERVICES().type: {\r\n            return {\r\n                ...state,\r\n                allServices: action.payload\r\n            }\r\n        }\r\n        case FETCH_SERVICE_SUMMARY().type: {\r\n            return {\r\n                ...state,\r\n                summary: action.payload\r\n            }\r\n        }\r\n        case FETCH_SERVICE_DETAILS().type: {\r\n            return {\r\n                ...state,\r\n                serviceDetails: action.payload\r\n            }\r\n        }\r\n        case RESET_STATE.type: {\r\n            return INITIAL_STATE\r\n        }\r\n        default: {\r\n            break;\r\n        }\r\n    }\r\n\r\n    return state;\r\n}\r\n","export const LOGIN_SUCCESS = payload => ({\r\n    type: 'LOGIN_SUCCESS', payload\r\n})\r\n\r\nexport const LOGIN_ERROR = payload => ({\r\n    type: 'LOGIN_ERROR', payload\r\n})","import {\r\n    LOGIN_ERROR,\r\n    LOGIN_SUCCESS\r\n} from '../actions/types/auth';\r\n\r\nimport { RESET_STATE } from '../actions/types';\r\n\r\nconst INITIAL_STATE = {\r\n    loginError: null,\r\n    isLoggedIn: false\r\n};\r\n\r\nexport default function reducer(state=INITIAL_STATE, action) {\r\n    \r\n    switch (action.type) {\r\n        case LOGIN_SUCCESS().type: {\r\n            return {\r\n                ...state,\r\n                isLoggedIn: true,\r\n                loginError: null\r\n            }\r\n        }\r\n        case LOGIN_ERROR().type: {\r\n            return {\r\n                ...state,\r\n                loginError: action.payload\r\n            }\r\n        }\r\n        case RESET_STATE: {\r\n            return INITIAL_STATE\r\n        }\r\n        default: {\r\n            break;\r\n        }\r\n    }\r\n\r\n    return state;\r\n}\r\n","import { combineReducers } from 'redux';\r\n\r\nimport service from './service';\r\nimport auth from './auth';\r\n\r\nexport default combineReducers({\r\n    auth,\r\n    service\r\n})\r\n","import { applyMiddleware, createStore } from 'redux';\r\nimport { createLogger } from 'redux-logger';\r\nimport thunk from 'redux-thunk';\r\nimport promise from 'redux-promise-middleware';\r\n\r\nimport reducer from './reducers';\r\n\r\nconst middleware = applyMiddleware(promise(), thunk, createLogger());\r\n\r\nexport default createStore(reducer, middleware);\r\n","import createBrowserHistory from 'history/createBrowserHistory';\r\n\r\nexport default createBrowserHistory();","export default {\r\n    login: '/login',\r\n    home: '/',\r\n    root: '/',\r\n    details: serviceId => { return `/details/${serviceId}`; }\r\n}","export const COLOR_1 = opacity => `rgba(56, 147, 255, ${opacity || 1})`;\r\nexport const BLACK = opacity => `rgba(0, 0, 0, ${opacity || 1})`;\r\nexport const WHITE = opacity => `rgba(255, 255, 255, ${opacity || 1})`;\r\n\r\nexport default {\r\n    COLOR_1,\r\n    BLACK,\r\n    WHITE\r\n}","import axios from 'axios';\r\nimport { API_URL } from '../config';\r\nimport { authRequest } from '../actions/auth';\r\n\r\nconst login = async (email, password) => {\r\n    return axios.post(`${API_URL}/auth/login`, { email, password })\r\n}\r\n\r\nconst verify = async () => {\r\n    return axios.get(`${API_URL}/auth/verify`, authRequest({}));\r\n}\r\n\r\nexport default {\r\n    login,\r\n    verify\r\n}","export const API_URL = '/api';","import axios from 'axios';\r\nimport { API_URL } from '../config';\r\nimport { authRequest } from '../actions/auth';\r\n\r\nconst fetchAll = async () => {\r\n    return axios.get(`${API_URL}/service/all`, authRequest({}));\r\n}\r\n\r\nconst fetchActiveOrNonActive = async () => {\r\n    return axios.get(`${API_URL}/service/activeOrNonActive`, authRequest({}));\r\n}\r\n\r\nconst fetchHeldOrNonActive = async () => {\r\n    return axios.get(`${API_URL}/service/heldOrNonActive`, authRequest({}));\r\n}\r\n\r\nconst fetchSummary = async () => {\r\n    return axios.get(`${API_URL}/service/summary`, authRequest({}));\r\n}\r\n\r\nconst fetchDetails = async serviceId => {\r\n    return axios.get(`${API_URL}/service/details`, authRequest({\r\n        params: {\r\n            serviceId\r\n        }\r\n    }));\r\n}\r\n\r\nconst end = async (xmin, serviceId) => {\r\n    return axios.post(`${API_URL}/service/end`, { \r\n        xmin, serviceId \r\n    }, authRequest({}));\r\n}\r\n\r\nexport default {\r\n    end,\r\n    fetchAll,\r\n    fetchActiveOrNonActive,\r\n    fetchHeldOrNonActive,\r\n    fetchSummary,\r\n    fetchDetails\r\n}","import auth from './auth';\r\nimport service from './service';\r\n\r\nexport default {\r\n    auth,\r\n    service\r\n}","import history from '../util/history';\r\nimport routes from '../util/routes';\r\n\r\nimport API from '../api';\r\n\r\nimport {\r\n    LOGIN_SUCCESS,\r\n    LOGIN_ERROR\r\n} from './types/auth';\r\n\r\nimport { RESET_STATE } from './types';\r\n\r\nexport const login = (email, password) => {\r\n    return async dispatch => {\r\n        try {\r\n            const { data } = await API.auth.login(email, password);\r\n\r\n            dispatch(LOGIN_SUCCESS(data));\r\n\r\n            localStorage.setItem('token', data.token);\r\n\r\n            history.push(routes.home);\r\n        } catch (err) {\r\n            dispatch(LOGIN_ERROR(err.response.data.msg))\r\n        }\r\n    }\r\n}\r\n\r\nexport const verify = redirectPath => {\r\n    return async dispatch => {\r\n        try {\r\n            const { data } = await API.auth.verify();\r\n            dispatch(LOGIN_SUCCESS(data));\r\n            redirectPath = redirectPath === routes.login ? routes.home : redirectPath;\r\n            history.push(redirectPath);\r\n        } catch(err) {\r\n            history.push(routes.login);\r\n        }\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    return dispatch => {\r\n        localStorage.removeItem('token');\r\n        history.push(routes.login);\r\n    }\r\n}\r\n\r\nexport const authRequest = data => {\r\n    const token = localStorage.getItem('token');\r\n    return {\r\n        ...data,\r\n        headers: data == null ? {\r\n            Authorization: `Bearer ${token}`\r\n        } : {\r\n            ...data.headers,\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n}","import styled from 'styled-components';\r\n\r\nexport const ButtonStyled =  styled.button`\r\n    border: none;\r\n    background: ${({ theme }) => theme.COLOR_1()};\r\n    font-size: .9rem;\r\n    color: white;\r\n    font-weight: bold;\r\n    border-radius: .5rem;\r\n    padding: .5rem;\r\n    cursor: pointer;\r\n\r\n    :hover {\r\n        background: ${({ theme }) => theme.COLOR_1(.9)};\r\n    }\r\n`;\r\n\r\nexport const InputStyled = styled.input`\r\n    margin-bottom: 1rem;\r\n    height: 1.5rem;\r\n    font-size: .9rem;\r\n    padding: .25rem;\r\n    border: 1px solid #c0c0c0;\r\n    border-radius: .5rem;\r\n`\r\n\r\nexport const LabelStyled = styled.label`\r\n    font-weight: bold;\r\n    color: #777;\r\n    margin-bottom: .25rem;\r\n    font-size: .9rem;\r\n`\r\n","import styled from 'styled-components';\r\n\r\nexport const LoginFormStyled = styled.form`\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 15rem;\r\n    border: 1px solid #c0c0c0;\r\n    padding: 2.5rem 2.5rem 2.5rem 2.5rem;\r\n    border-radius: .5rem;\r\n    box-shadow: 6px 4px 10px ${({ theme }) => theme.BLACK(.1)};\r\n`\r\n\r\nexport const FormTitleStyled = styled.div`\r\n    font-weight: bold;\r\n    font-size: 2rem;\r\n    margin-bottom: 3rem;\r\n`\r\n\r\nexport const ErrorStyled = styled.div`\r\n    color: red;\r\n    height: 1rem;\r\n    display: flex;\r\n    padding: 1rem 0;\r\n    justify-content: center;\r\n    align-items: center;\r\n`","import React, { Component } from 'react';\r\nimport { connect } from 'react-router-dom';\r\n\r\nimport {\r\n    LabelStyled, ButtonStyled, InputStyled\r\n} from '../../styled/form';\r\n\r\nimport {\r\n    LoginFormStyled,\r\n    FormTitleStyled,\r\n    ErrorStyled\r\n} from './styles';\r\n\r\nclass LoginForm extends Component {\r\n    state = {\r\n        username: '',\r\n        password: ''\r\n    }\r\n\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n        const { username, password } = this.state;\r\n        this.props.onSubmit(username, password);\r\n    }\r\n\r\n    handleChange = e => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    render() {\r\n        const { error } = this.props;\r\n\r\n        return (\r\n            <LoginFormStyled onSubmit={e => this.onSubmit(e)}>\r\n                <FormTitleStyled>\r\n                    Autoteenindus\r\n                </FormTitleStyled>\r\n                <LabelStyled>Kasutajanimi:</LabelStyled>\r\n                <InputStyled \r\n                    autoComplete=\"off\"\r\n                    onChange={e => this.handleChange(e)} \r\n                    name=\"username\" \r\n                    type=\"text\"\r\n                />\r\n                <LabelStyled>Parool:</LabelStyled>\r\n                <InputStyled \r\n                    onChange={e => this.handleChange(e)}\r\n                    name=\"password\" \r\n                    type=\"password\" \r\n                />\r\n                <ButtonStyled>\r\n                    Logi sisse\r\n                </ButtonStyled>\r\n                <ErrorStyled>\r\n                    {error || ''}\r\n                </ErrorStyled>\r\n            </LoginFormStyled>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LoginForm;\r\n","import styled from 'styled-components';\r\n\r\nexport const LoginScreenStyled = styled.div`\r\n    height: 100%;\r\n    width: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport LoginForm from '../../components/LoginForm';\r\n\r\nimport { LoginScreenStyled } from './styles';\r\n\r\nimport { RESET_STATE } from '../../actions/types'\r\nimport { login as loginAction } from '../../actions/auth';\r\n\r\nclass LoginScreen extends Component {\r\n    componentDidMount() {\r\n        this.props.dispatch(RESET_STATE);\r\n    }\r\n\r\n    login = (username, password) => {\r\n        this.props.dispatch(loginAction(username, password));\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            loginError\r\n        } = this.props;\r\n\r\n        return (\r\n            <LoginScreenStyled>\r\n                <LoginForm \r\n                    error={loginError}\r\n                    onSubmit={this.login}\r\n                />\r\n            </LoginScreenStyled>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n    return {\r\n        loginError: store.auth.loginError\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(LoginScreen);\r\n","import styled from 'styled-components';\r\n\r\nexport const AppScreenStyled = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n`;\r\n\r\nexport const ContentStyled = styled.div`\r\n    padding: 1rem 5rem;\r\n    width: 100%;\r\n    flex: 1;\r\n    box-sizing: border-box;\r\n    overflow: auto;\r\n`","import styled from 'styled-components';\r\n\r\nexport const NavbarStyled = styled.div`\r\n    background: ${({ theme }) => theme.WHITE()};\r\n    width: 100%;\r\n    box-shadow: 0 6px 10px rgba(0, 0, 0, .1);\r\n    display: flex;\r\n    flex: 1;\r\n    flex-shrink: 0;\r\n    padding: 1rem 0;\r\n\r\n    div {\r\n        flex: 1;\r\n    }\r\n`;\r\n\r\nexport const LeftStyled = styled.div`\r\n    text-align: left;\r\n    padding-left: 1rem;\r\n    font-size: .9rem;\r\n`;\r\n\r\nexport const MidStyled = styled.div`\r\n    text-align: center;\r\n    font-weight: bold;\r\n`;\r\n\r\nexport const RightStyled = styled.div`\r\n    text-align: right;\r\n    padding-right: 3rem;\r\n    font-size: .9rem;\r\n`;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { \r\n     NavbarStyled, LeftStyled, MidStyled, RightStyled\r\n} from './styles';\r\n\r\nimport { logout as logoutAction } from '../../actions/auth';\r\n\r\nimport routes from '../../util/routes';\r\n\r\nclass Navbar extends Component {\r\n    logout = () => {\r\n        this.props.dispatch(logoutAction());\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <NavbarStyled>\r\n                <LeftStyled>\r\n                    \r\n                </LeftStyled>\r\n                <MidStyled>\r\n                    <Link to={routes.home}>Autoteenindus</Link>\r\n                </MidStyled>\r\n                <RightStyled>\r\n                    <Link to={routes.login} onClick={() => this.logout()}>Logi välja</Link>\r\n                </RightStyled>\r\n            </NavbarStyled>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect()(Navbar);\r\n","export const tableRows = {\r\n    allServices: {\r\n        headings: [\r\n            'Teenuse kood', \r\n            'Teenuse nimetus', \r\n            'Hind (EUR)', \r\n            'Teenuse kirjeldus', \r\n            'Registreerimisaeg', \r\n            'Seisund', \r\n            'Registreerija'\r\n        ], \r\n        sizes: ['10%', '10%', '10%', '30%', '15%', '10%', '15%']\r\n    },\r\n    summary: {\r\n        headings: [\r\n            'Seisundi kood', \r\n            'Seisundi nimetus', \r\n            'Teenuste koguarv' \r\n        ], \r\n        sizes: ['33%', '33%', '33%']\r\n    },\r\n    heldOrNonActiveServices: {\r\n        headings: [\r\n            'Teenuse kood',\r\n            'Hind (EUR)',\r\n            'Teenuse kirjeldus',\r\n            'Teenuse nimetus',\r\n            'Raskusaste',\r\n            'Seisund'\r\n        ],\r\n        sizes: ['0%', '10%', '10%', '40%', '20%', '10%', '10%'],\r\n        ignoreValues: ['xmin']\r\n    },\r\n    activeOrNonActiveServices: {\r\n        headings: [\r\n            'Teenuse kood',\r\n            'Seisund',\r\n            'Teenuse nimetus',\r\n            'Teenuse kirjeldus',\r\n            'Hind (EUR)',\r\n            'Registreerimisaeg',\r\n            'Registreerija',\r\n            ''\r\n        ],\r\n        sizes: ['0%', '10%', '10%', '10%', '30%', '10%', '15%', '15%'],\r\n        ignoreValues: ['xmin']\r\n    }\r\n}","import API from '../api';\r\n\r\nimport {\r\n    FETCH_ACTIVE_OR_NON_ACTIVE_SERVICES,\r\n    FETCH_ALL_SERVICES,\r\n    FETCH_SERVICE_SUMMARY,\r\n    FETCH_HELD_OR_NON_ACTIVE_SERVICES,\r\n    FETCH_SERVICE_DETAILS\r\n} from './types/service';\r\n\r\nexport const fetchAllServices = () => {\r\n    return async dispatch => {\r\n        try {\r\n            const { data } = await API.service.fetchAll();\r\n\r\n            dispatch(FETCH_ALL_SERVICES(data));\r\n        } catch (err) {\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport const fetchActiveOrNonActiveServices = () => {\r\n    return async dispatch => {\r\n        try {\r\n            const { data } = await API.service.fetchActiveOrNonActive();\r\n\r\n            dispatch(FETCH_ACTIVE_OR_NON_ACTIVE_SERVICES(data));\r\n        } catch (err) {\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport const fetchHeldOrNonActiveServices = () => {\r\n    return async dispatch => {\r\n        try {\r\n            const { data } = await API.service.fetchHeldOrNonActive();\r\n\r\n            dispatch(FETCH_HELD_OR_NON_ACTIVE_SERVICES(data));\r\n        } catch (err) {\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport const fetchServiceSummary = () => {\r\n    return async dispatch => {\r\n        try {\r\n            const { data } = await API.service.fetchSummary();\r\n\r\n            dispatch(FETCH_SERVICE_SUMMARY(data));\r\n        } catch (err) {\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport const fetchServiceDetails = serviceId => {\r\n    return async dispatch => {\r\n        try {\r\n            const { data } = await API.service.fetchDetails(serviceId);\r\n\r\n            dispatch(FETCH_SERVICE_DETAILS(data));\r\n        } catch (err) {\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport const endService = (xmin, serviceId) => {\r\n    return async dispatch => {\r\n        try {\r\n            await API.service.end(xmin, serviceId);\r\n            dispatch(fetchAllServices());\r\n            dispatch(fetchActiveOrNonActiveServices());\r\n            dispatch(fetchServiceSummary());\r\n            dispatch(fetchHeldOrNonActiveServices());\r\n        } catch (err) {\r\n            throw err;\r\n        }\r\n    }\r\n}","import styled from 'styled-components';\r\n\r\nexport const OverviewScreenStyled = styled.div`\r\n    width: 100%;\r\n`;","import styled from 'styled-components';\r\n\r\nexport const SectionStyled = styled.div`\r\n    border-radius: .5rem;\r\n    overflow: hidden;\r\n    margin: 2rem 0;\r\n    box-shadow: 4px 6px 10px rgba(0, 0, 0, .1);\r\n`;\r\n\r\nexport const TitleStyled = styled.div`\r\n    background: #3893ff;\r\n    padding: .5rem .75rem;\r\n    color: white;\r\n    font-weight: bold;\r\n`;\r\n\r\nexport const ContentStyled = styled.div`\r\n    border: 1px solid #c0c0c0;\r\n    border-width: 0 1px 1px 1px;\r\n    border-radius: 0 0 .5rem .5rem;\r\n`;","import React, { Component } from 'react';\r\n\r\nimport { \r\n    SectionStyled, TitleStyled, ContentStyled \r\n} from './styles';\r\n\r\nclass Section extends Component {\r\n    render() {\r\n        const { \r\n            children,\r\n            title\r\n        } = this.props;\r\n\r\n        return (\r\n            <SectionStyled>\r\n                <TitleStyled>\r\n                    {title}\r\n                </TitleStyled>\r\n                <ContentStyled>\r\n                    {children}\r\n                </ContentStyled>\r\n            </SectionStyled>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Section;\r\n","import styled from 'styled-components';\r\n\r\nexport const TableStyled = styled.table`\r\n    font-size: .9rem;\r\n    border-spacing: 0;\r\n    width: 100%;\r\n`\r\n\r\nexport const RowStyled = styled.tr`\r\n    ${({ heading, theme, clickable }) => `\r\n        :not(:last-child) td { \r\n            border-bottom: 1px solid ${theme.BLACK(.1)}; \r\n        }\r\n\r\n        td:not(:last-child) {\r\n            border-right: 1px solid ${theme.BLACK(.1)};\r\n        }\r\n        \r\n        td { padding: .5rem; }\r\n\r\n        :hover {\r\n            ${clickable && `\r\n                background: ${theme.BLACK(.05)};\r\n                cursor: pointer;\r\n            `}\r\n        }\r\n\r\n        ${heading && 'font-weight: bold;'}\r\n    `}\r\n`\r\n","import React, { Component } from 'react';\r\n\r\nimport { \r\n     TableStyled, RowStyled\r\n} from './styles';\r\n\r\n\r\nclass Table extends Component {\r\n    render() {\r\n        const {\r\n            data,\r\n            sizes,\r\n            headings,\r\n            clickable,\r\n            onRowClick,\r\n            ignoreValues,\r\n            addCol,\r\n            addColClick\r\n        } = this.props;\r\n\r\n        const ignore = ignoreValues || [];\r\n\r\n        return (\r\n            <TableStyled>\r\n                <tbody>\r\n                    <RowStyled heading>\r\n                        {headings.map((heading, i) => (\r\n                            <td key={i}>{heading}</td>\r\n                        ))}\r\n                    </RowStyled>\r\n                    {data.map((row, i) => (\r\n                        <RowStyled key={i} onClick={() => onRowClick && onRowClick(row)} clickable={clickable}>\r\n                            {Object.keys(row).map((key, i) => (\r\n                                ignore.indexOf(key) === -1 &&\r\n                                <td key={i} width={sizes[i]}>\r\n                                    {row[key]}\r\n                                </td>\r\n                            ))}\r\n                            {addCol &&\r\n                                <td onClick={() => addColClick(row)}>\r\n                                    {addCol}\r\n                                </td>\r\n                            }\r\n                        </RowStyled>\r\n                    ))}\r\n                </tbody>\r\n            </TableStyled>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Table;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { tableRows } from '../../util/constants';\r\nimport history from '../../util/history';\r\nimport routes from '../../util/routes';\r\n\r\nimport { \r\n    endService as endServiceAction,\r\n    fetchActiveOrNonActiveServices,\r\n    fetchAllServices,\r\n    fetchHeldOrNonActiveServices,\r\n    fetchServiceSummary,\r\n    fetchServiceDetails\r\n} from '../../actions/service';\r\n\r\nimport {\r\n    OverviewScreenStyled\r\n} from './styles';\r\n\r\nimport Section from '../../components/Section';\r\nimport Table from '../../components/Table';\r\n\r\nclass OverviewScreen extends Component {\r\n\r\n    viewDetails = row => {\r\n        history.push(routes.details(row.teenus_kood));\r\n    }\r\n\r\n    endService = row => {\r\n        this.props.dispatch(endServiceAction(row.xmin, row.teenus_kood));\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.dispatch(fetchActiveOrNonActiveServices());\r\n        this.props.dispatch(fetchAllServices());\r\n        this.props.dispatch(fetchHeldOrNonActiveServices());\r\n        this.props.dispatch(fetchServiceSummary());\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            summary,\r\n            allServices,\r\n            heldOrNonActiveServices,\r\n            activeOrNonActiveServices\r\n        } = this.props;\r\n\r\n        return (\r\n            <OverviewScreenStyled>\r\n                <Section title=\"KÕIK TEENUSED\">\r\n                    <Table \r\n                        data={allServices} \r\n                        headings={tableRows.allServices.headings}\r\n                        sizes={tableRows.allServices.sizes}\r\n                        onRowClick={this.viewDetails}\r\n                        clickable\r\n                    />\r\n                </Section>\r\n                <Section title=\"TEENUSTE KOONDARUANNE\">\r\n                    <Table \r\n                        data={summary} \r\n                        headings={tableRows.summary.headings}\r\n                        sizes={tableRows.summary.sizes}\r\n                    />\r\n                </Section>\r\n                <Section title=\"OOTEL JA MITTEAKTIIVSED TEENUSED\">\r\n                    <Table\r\n                        data={heldOrNonActiveServices}\r\n                        headings={tableRows.heldOrNonActiveServices.headings}\r\n                        sizes={tableRows.heldOrNonActiveServices.sizes}\r\n                        ignoreValues={tableRows.heldOrNonActiveServices.ignoreValues}\r\n                    />\r\n                </Section>\r\n                <Section title=\"LÕPETA TEENUS\">\r\n                    <Table\r\n                        data={activeOrNonActiveServices}\r\n                        headings={tableRows.activeOrNonActiveServices.headings}\r\n                        sizes={tableRows.activeOrNonActiveServices.sizes}\r\n                        ignoreValues={tableRows.activeOrNonActiveServices.ignoreValues}\r\n                        addCol={<Link to=\"\">Lõpeta</Link>}\r\n                        addColClick={this.endService}\r\n                    />\r\n                </Section>\r\n            </OverviewScreenStyled>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n    return {\r\n        summary: store.service.summary,\r\n        allServices : store.service.allServices,\r\n        heldOrNonActiveServices: store.service.heldOrNonActiveServices,\r\n        activeOrNonActiveServices: store.service.activeOrNonActiveServices\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(OverviewScreen);\r\n","import styled from 'styled-components';\r\n\r\nexport const DetailScreenStyled = styled.div`\r\n    width: 100%;\r\n    padding-top: 2rem;\r\n    \r\n`;\r\n\r\nexport const DetailTableStyled = styled.table`\r\n    border-spacing: 0;\r\n    width: 100%;\r\n\r\n    td {\r\n        padding: .6rem .6rem;\r\n    }\r\n\r\n    tr:nth-child(even) {\r\n        background: ${({ theme }) => theme.COLOR_1(.1)};\r\n    }\r\n`\r\n\r\nexport const TitleStyled = styled.div`\r\n    background: ${({ theme }) => theme.COLOR_1()};\r\n    width: 100%;\r\n    padding: .5rem .75rem;\r\n    font-weight: bold;\r\n    color: white;\r\n    box-sizing: border-box;\r\n    border-radius: .5rem .5rem 0 0;\r\n`","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { fetchServiceDetails } from '../../actions/service';\r\n\r\nimport {\r\n    DetailScreenStyled,\r\n    DetailTableStyled,\r\n    TitleStyled\r\n} from './styles';\r\n\r\nclass DetailScreen extends Component {\r\n    componentDidMount() {\r\n        const { serviceId } = this.props.match.params;\r\n        this.props.dispatch(fetchServiceDetails(serviceId));\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            serviceDetails\r\n        } = this.props;\r\n\r\n        const {\r\n            teenus_kood,\r\n            teenus_nimetus,\r\n            teenus_kirjeldus,\r\n            hind,\r\n            reg_aeg,\r\n            seisund,\r\n            registreerija,\r\n            kategooriad,\r\n            raskusaste_nimetus\r\n        } = serviceDetails;\r\n\r\n        return (\r\n            <DetailScreenStyled>\r\n                <TitleStyled>\r\n                    DETAILVAADE\r\n                </TitleStyled>\r\n                <DetailTableStyled>\r\n                    <tbody>\r\n                        <tr>  \r\n                            <td width=\"200px\"><strong>Teenuse nimetus:</strong></td> \r\n                            <td>{teenus_nimetus}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><strong>Teenuse kood:</strong></td> \r\n                            <td>{teenus_kood}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><strong>Teenuse kirjeldus:</strong></td> \r\n                            <td>{teenus_kirjeldus}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><strong>Hind (EUR):</strong></td> \r\n                            <td>{hind}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><strong>Registreerimise aeg:</strong></td> \r\n                            <td>{reg_aeg}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><strong>Seisund:</strong></td> \r\n                            <td>{seisund}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><strong>Registreerija:</strong></td> \r\n                            <td>{registreerija}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><strong>Raskusaste:</strong></td> \r\n                            <td>{raskusaste_nimetus}</td>\r\n                        </tr>\r\n                        {kategooriad.map((kategooria, i) => \r\n                            <tr key={i}>\r\n                                <td><strong>{kategooria.kategooria_tyyp}:</strong></td> \r\n                                <td>{kategooria.kategooria_nimetus}</td>\r\n                            </tr>\r\n                        )}\r\n                    </tbody>\r\n                </DetailTableStyled>\r\n            </DetailScreenStyled>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n    return {\r\n        serviceDetails: store.service.serviceDetails\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps)(DetailScreen));\r\n","import React, { Component } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport routes from '../../util/routes';\r\n\r\nimport {\r\n    AppScreenStyled, ContentStyled\r\n} from './styles';\r\n\r\nimport Navbar from '../Navbar';\r\nimport OverviewScreen from '../OverviewScreen';\r\nimport DetailScreen from '../DetailScreen';\r\n\r\nclass AppScreen extends Component {\r\n    render() {\r\n        return (\r\n            <AppScreenStyled>\r\n                <Navbar />\r\n                <ContentStyled>\r\n                    <Switch>\r\n                        <Route exact path={routes.details(':serviceId')} component={DetailScreen} />\r\n                        <Route path={routes.home} component={OverviewScreen} />\r\n                    </Switch>\r\n                </ContentStyled>\r\n            </AppScreenStyled>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AppScreen;\r\n","import styled from 'styled-components';\r\n\r\nexport const RootStyled = styled.div`\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n`;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Route, Switch, withRouter } from 'react-router-dom';\r\n\r\nimport { verify } from '../../actions/auth';\r\nimport routes from '../../util/routes';\r\n\r\nimport LoginScreen from '../LoginScreen';\r\nimport AppScreen from '../AppScreen';\r\n\r\nimport { RootStyled } from './styles';\r\n\r\nclass Root extends Component {\r\n    componentDidMount() {\r\n        this.props.dispatch(verify(this.props.location.pathname));\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            isLoggedIn\r\n        } = this.props;\r\n\r\n        return (\r\n            <RootStyled>\r\n                <Switch>\r\n                    <Route exact path={routes.login} component={LoginScreen} />\r\n                    {isLoggedIn &&\r\n                        <Route path={routes.home} component={AppScreen} />\r\n                    }\r\n                </Switch>\r\n            </RootStyled>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n    return {\r\n        isLoggedIn: store.auth.isLoggedIn\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps)(Root));\r\n","import React, { Component } from 'react';\r\nimport { Router, Route } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { ThemeProvider } from 'styled-components';\r\n\r\nimport store from './store';\r\nimport history from './util/history';\r\nimport routes from './util/routes';\r\nimport theme from './util/theme';\r\n\r\nimport Root from './containers/Root';\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <Provider store={store}>\r\n                <Router history={history}>\r\n                    <ThemeProvider theme={theme}>\r\n                        <Route path={routes.root} component={Root} />\r\n                    </ThemeProvider>\r\n                </Router>\r\n            </Provider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n                            );\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.');\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type');\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            );\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister();\r\n        });\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport './style.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}